[{"/home/yoav/Documents/MalwareServer/1/client/clientapp/src/index.js":"1","/home/yoav/Documents/MalwareServer/1/client/clientapp/src/App.js":"2","/home/yoav/Documents/MalwareServer/1/client/clientapp/src/reportWebVitals.js":"3","/home/yoav/Documents/MalwareServer/web-application/src/index.js":"4","/home/yoav/Documents/MalwareServer/web-application/src/App.js":"5","/home/yoav/Documents/MalwareServer/web-application/src/reportWebVitals.js":"6","/home/yoav/Documents/MalwareServer/web-application/src/db.js":"7","/home/yoav/Documents/MalwareServer/web-application/src/home.js":"8","/home/yoav/Documents/MalwareServer/web-application/src/virustotal.js":"9"},{"size":478,"mtime":1665782361131,"results":"10","hashOfConfig":"11"},{"size":2282,"mtime":1665916378011,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1665782361131,"results":"13","hashOfConfig":"11"},{"size":571,"mtime":1665983406102,"results":"14","hashOfConfig":"15"},{"size":849,"mtime":1666209749205,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1665782361131,"results":"17","hashOfConfig":"15"},{"size":5803,"mtime":1666198249042,"results":"18","hashOfConfig":"15"},{"size":318,"mtime":1666209711561,"results":"19","hashOfConfig":"15"},{"size":3577,"mtime":1666209803355,"results":"20","hashOfConfig":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ex2ed",{"filePath":"23","messages":"24","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1gq5ehk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/yoav/Documents/MalwareServer/1/client/clientapp/src/index.js",[],"/home/yoav/Documents/MalwareServer/1/client/clientapp/src/App.js",["42","43","44","45","46","47","48","49","50","51","52","53","54","55"],"import { useState } from 'react';\nimport './App.css';\nimport Axios from 'axios'\n\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [searchedByColum, setSearchedByColum] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [platforms, setPlatforms] = useState(\"\");\n  const [detection, setDetection] = useState(\"\");\n  const [phases, setPhases] = useState(\"\");\n\n  const[attacksList, setAttacksList] = useState([]);\n\n  const columns = [\n    { key: 'ID', name: 'ID' },\n    { key: 'DESCRIPTION', name: 'DESCRIPTION' },\n    { key: 'NAME', name: 'NAME' }, \n    { key: 'phase_name', name: 'phase_name'},\n    { key: 'x_mitre_detection', name: 'x_mitre_detection'},\n    { key: 'x_mitre_platforms', name:'x_mitre_platforms'}];\n  \n    {/*getting attacks that match keyword*/}\n  const searchByKeyword = () =>{\n    console.log(keyword);\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: keyword ,\n      colum: searchedByColum\n    }).then((resp) => {\n      console.log(resp);\n      setAttacksList(resp.data['rows']);\n    });\n  }\n\n\n  return (\n    <div className=\"App\" >\n      \n      <h1>Welcome</h1>\n      <p>Enter a keyword to search by</p>\n        <div className=\"input\">\n        <label>Input: </label>\n        {/*getting keyword */}\n        <input type=\"text\" onChange= {(event)=> {\n          setKeyword(event.target.value);\n          setSearchedByColum(\"DESCRIPTION\");\n        }}/>\n        <br></br>\n        \n      </div>\n      <div className=\"attacks\">\n        <button onClick={searchByKeyword}>search</button>\n        {/* showing attacks to the user */}\n\n        {attacksList.map((val, key) => {\n          console.log(key);\n          return (\n              \n            <div className=\"attack\" key={key}>\n              <div>\n                <h3>Name: {val.NAME}</h3>\n                <h3>Id: {val.ID}</h3>\n                <h3>Description: {val.DESCRIPTION}</h3>\n                <h3>Platforms: {val.x_mitre_platforms}</h3>\n                <h3>detection: {val.x_mitre_detection}</h3>\n                <h3>Phases: {val.phase_name}</h3>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","/home/yoav/Documents/MalwareServer/1/client/clientapp/src/reportWebVitals.js",[],"/home/yoav/Documents/MalwareServer/web-application/src/index.js",[],["56","57"],"/home/yoav/Documents/MalwareServer/web-application/src/App.js",[],"/home/yoav/Documents/MalwareServer/web-application/src/reportWebVitals.js",[],"/home/yoav/Documents/MalwareServer/web-application/src/db.js",["58"],"import './App.css';\nimport * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid';\nimport Axios from 'axios'\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nconst DB = () => {\n  const [requestType, setRequestType] = React.useState(''); \n  const [requestValue, setRequestValue] = React.useState(''); \n  const [attacks, setAttacks] = React.useState([]);\n\n  const handleSelectChange = (event) => {\n    setRequestType(event.target.value);\n  };\n  \n  const handleTextChange = (event) => {\n    setRequestValue(event.target.value);\n  };\n\n  const ConductQuery = () =>{\n    getDbAtacksViaKeyword();\n  };\n\n  const getDbAtacksViaKeyword = () =>{\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: requestValue ,\n      colum: requestType\n    }).then((resp) => {\n      console.log('1')\n      console.log(resp.data);\n      console.log(typeof resp.data['rows'])\n      setAttacks(resp.data['rows']);\n    });\n  };\n\n  return(\n    <div className='db'>\n      <p>\n        This is an attack search service\n      </p>\n      <p>\n        You cand search the db by specifing the colum name(Name, Id, Description, Platforms, Detection, Phase) and the keyword\n      </p>\n      <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n        <InputLabel id=\"demo-select-small\">Request Type</InputLabel>\n        <Select\n          labelId=\"demo-select-small\"\n          id=\"demo-select-small\"\n          value={requestType}\n          label=\"Request Type\"\n          onChange={handleSelectChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={\"NAME\"}>Name</MenuItem>\n          <MenuItem value={\"ID\"}>Id</MenuItem>\n          <MenuItem value={\"DESCRIPTION\"}>Description</MenuItem>\n          <MenuItem value={\"X_MITRE_PLATFORMS\"}>Platforms</MenuItem>\n          <MenuItem value={\"X_MITRE_DETECTION\"}>Detection</MenuItem>\n          <MenuItem value={\"PHASE_NAME\"}>Phases</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        id=\"request_value_input\"\n        label=\"Request Value\"\n        value={requestValue}\n        onChange={handleTextChange}\n      />\n      <Button onClick={ConductQuery}>Conduct query</Button>\n      <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"flex-start\"\n      >\n        {attacks.map((val, key) => {\n          return(\n            <Grid Item >\n              <Grid\n              container\n              direction=\"column\"\n              justifyContent=\"space-around\"\n              alignItems=\"flex-start\"\n              >\n              <Item>Index: {key + 1}</Item>\n              <Item>Name: {val['NAME']} </Item>\n              <Item>Id: {val['ID']} </Item>\n              <Item>Description: {val['DESCRIPTION']} </Item>\n              <Item>Platforms: {val['X_MITRE_PLATFORMS']} </Item>\n              <Item>Detection: {val['X_MITRE_DETECTION']} </Item>\n              <Item>Phase: {val['PHASE_NAME']} </Item>\n              </Grid>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </div>\n  )\n}\n/*\n<Grid Item >\n              <Grid\n              container\n              direction=\"column\"\n              justifyContent=\"flex-start\"\n              alignItems=\"flex-start\"\n              >\n              <Item>Name: {val['NAME']}{\"\\n\"}</Item>\n              <Item>Id: {val['ID']}{\"\\n\"}</Item>\n              <Item>Description: {val['DESCRIPTION']}{\"\\n\"}</Item>\n              <Item>Platforms: {val['PLATFORMS']}{\"\\n\"}</Item>\n              <Item>Detection: {val['DETECTION']}{\"\\n\"}</Item>\n              <Item>Phase: {val['PHASE']}{\"\\n\"}</Item>\n              </Grid>\n            </Grid>\n*/\n/* \nconst [keyword, setKeyword] = useState(\"\");\n  const [searchedByColum, setSearchedByColum] = useState(\"\");\n\n  const[attacksList, setAttacksList] = useState([]);\n\n    //getting attacks that match keyword\n  const searchByKeyword = () =>{\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: keyword ,\n      colum: searchedByColum\n    }).then((resp) => {\n      console.log(resp);\n      setAttacksList(resp.data['rows']);\n    });\n  }\n\n\n  return (\n    <div className=\"App\" >\n      \n      <h1>Welcome</h1>\n      <p>Enter a keyword to search by</p>\n        <div className=\"input\">\n        <label>Input: </label>\n      \n        <input type=\"text\" onChange= {(event)=> {\n            setKeyword(event.target.value);\n            setSearchedByColum(\"DESCRIPTION\");\n          }}/>\n          <br></br>\n          \n        </div>\n        <div className=\"attacks\">\n          <button onClick={searchByKeyword}>search</button>\n          \n  \n          {attacksList.map((val, key) => {\n            return (\n                \n              <div className=\"attack\" key={key}>\n                <div>\n                  <h3>Name: {val.NAME}</h3>\n                  <h3>Id: {val.ID}</h3>\n                  <h3>Description: {val.DESCRIPTION}</h3>\n                  <h3>Platforms: {val.x_mitre_platforms}</h3>\n                  <h3>detection: {val.x_mitre_detection}</h3>\n                  <h3>Phases: {val.phase_name}</h3>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        </div>\n    );\n*/\n\nexport default DB;","/home/yoav/Documents/MalwareServer/web-application/src/home.js",[],"/home/yoav/Documents/MalwareServer/web-application/src/virustotal.js",["59","60","61","62"],{"ruleId":"63","severity":1,"message":"64","line":11,"column":10,"nodeType":"65","messageId":"66","endLine":11,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":11,"column":16,"nodeType":"65","messageId":"66","endLine":11,"endColumn":23},{"ruleId":"63","severity":1,"message":"68","line":12,"column":10,"nodeType":"65","messageId":"66","endLine":12,"endColumn":12},{"ruleId":"63","severity":1,"message":"69","line":12,"column":14,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"70","line":13,"column":10,"nodeType":"65","messageId":"66","endLine":13,"endColumn":21},{"ruleId":"63","severity":1,"message":"71","line":13,"column":23,"nodeType":"65","messageId":"66","endLine":13,"endColumn":37},{"ruleId":"63","severity":1,"message":"72","line":14,"column":10,"nodeType":"65","messageId":"66","endLine":14,"endColumn":19},{"ruleId":"63","severity":1,"message":"73","line":14,"column":21,"nodeType":"65","messageId":"66","endLine":14,"endColumn":33},{"ruleId":"63","severity":1,"message":"74","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":19},{"ruleId":"63","severity":1,"message":"75","line":15,"column":21,"nodeType":"65","messageId":"66","endLine":15,"endColumn":33},{"ruleId":"63","severity":1,"message":"76","line":16,"column":10,"nodeType":"65","messageId":"66","endLine":16,"endColumn":16},{"ruleId":"63","severity":1,"message":"77","line":16,"column":18,"nodeType":"65","messageId":"66","endLine":16,"endColumn":27},{"ruleId":"63","severity":1,"message":"78","line":20,"column":9,"nodeType":"65","messageId":"66","endLine":20,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":28,"column":5,"nodeType":"81","messageId":"82","endLine":28,"endColumn":45},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"63","severity":1,"message":"87","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":11},{"ruleId":"88","severity":1,"message":"89","line":28,"column":22,"nodeType":"90","messageId":"91","endLine":28,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":30,"column":29,"nodeType":"90","messageId":"91","endLine":30,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":32,"column":29,"nodeType":"90","messageId":"91","endLine":32,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":34,"column":28,"nodeType":"90","messageId":"91","endLine":34,"endColumn":30},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'platforms' is assigned a value but never used.","'setPlatforms' is assigned a value but never used.","'detection' is assigned a value but never used.","'setDetection' is assigned a value but never used.","'phases' is assigned a value but never used.","'setPhases' is assigned a value but never used.","'columns' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'Box' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]