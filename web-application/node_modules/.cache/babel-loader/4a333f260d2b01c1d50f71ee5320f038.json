{"ast":null,"code":"var _jsxFileName = \"/home/yoav/Documents/MalwareServer/web-application/src/db.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  };\n});\nconst DB = () => {\n  _s();\n  const [requestType, setRequestType] = React.useState('');\n  const [requestValue, setRequestValue] = React.useState('');\n  const [attacks, setAttacks] = React.useState([]);\n  const [isAttacks, setIsAttacks] = React.useState(true);\n  const handleSelectChange = event => {\n    setRequestType(event.target.value);\n  };\n  const handleTextChange = event => {\n    setRequestValue(event.target.value);\n  };\n  const ConductQuery = () => {\n    getDbAtacksViaKeyword();\n  };\n  const CheckAttacks = () => {\n    if (isAttacks === true) {\n      return '';\n    } else {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: \"No result matches query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const getDbAtacksViaKeyword = () => {\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: requestValue,\n      colum: requestType\n    }).then(resp => {\n      if (resp.data['rows'] !== undefined) {\n        setAttacks(resp.data['rows']);\n        if (resp.data['rows'].length > 0) {\n          setIsAttacks(true);\n        } else {\n          setIsAttacks(false);\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"db\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is an attack search service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You cand search the db by specifing the colum name(Name, Id, Description, Platforms, Detection, Phase) and the keyword\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        minWidth: 120\n      },\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-select-small\",\n        children: \"Request Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-select-small\",\n        id: \"demo-select-small\",\n        value: requestType,\n        label: \"Request Type\",\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"NAME\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"ID\",\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"DESCRIPTION\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"X_MITRE_PLATFORMS\",\n          children: \"Platforms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"X_MITRE_DETECTION\",\n          children: \"Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"PHASE_NAME\",\n          children: \"Phases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"request_value_input\",\n      label: \"Request Value\",\n      value: requestValue,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: ConductQuery,\n      children: \"Conduct query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: CheckAttacks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), attacks.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          Item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justifyContent: \"space-around\",\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Index: \", key + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Name: \", val['NAME'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Id: \", val['ID'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Description: \", val['DESCRIPTION'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Platforms: \", val['X_MITRE_PLATFORMS'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Detection: \", val['X_MITRE_DETECTION'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: [\"Phase: \", val['PHASE_NAME'], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DB, \"JlwjziqmJPflsWTNDYSb6Dju/zk=\");\n_c = DB;\nexport default DB;\nvar _c;\n$RefreshReg$(_c, \"DB\");","map":{"version":3,"names":["React","experimentalStyled","styled","Box","Paper","InputLabel","MenuItem","FormControl","Select","TextField","Button","Grid","Axios","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","DB","requestType","setRequestType","useState","requestValue","setRequestValue","attacks","setAttacks","isAttacks","setIsAttacks","handleSelectChange","event","target","value","handleTextChange","ConductQuery","getDbAtacksViaKeyword","CheckAttacks","post","keyword","colum","then","resp","data","undefined","length","m","minWidth","map","val","key"],"sources":["/home/yoav/Documents/MalwareServer/web-application/src/db.js"],"sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport { experimentalStyled as styled} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid';\nimport Axios from 'axios'\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nconst DB = () => {\n  const [requestType, setRequestType] = React.useState(''); \n  const [requestValue, setRequestValue] = React.useState(''); \n  const [attacks, setAttacks] = React.useState([]);\n  const [isAttacks, setIsAttacks] = React.useState(true);\n\n  const handleSelectChange = (event) => {\n    setRequestType(event.target.value);\n  };\n  \n  const handleTextChange = (event) => {\n    setRequestValue(event.target.value);\n  };\n\n  const ConductQuery = () =>{\n    getDbAtacksViaKeyword();\n  };\n\n  const CheckAttacks = () => {\n    if(isAttacks === true){\n      return ''\n    }\n    else{\n      return <Item>No result matches query</Item>\n    }\n  };\n\n  const getDbAtacksViaKeyword = () =>{\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: requestValue ,\n      colum: requestType\n    }).then((resp) => {\n      if(resp.data['rows'] !== undefined){\n        setAttacks(resp.data['rows']);\n        if(resp.data['rows'].length > 0){\n          setIsAttacks(true)\n        }\n        else{\n          setIsAttacks(false)\n        }\n      }\n    });\n  };\n\n  return(\n    <div className='db'>\n      <p>\n        This is an attack search service\n      </p>\n      <p>\n        You cand search the db by specifing the colum name(Name, Id, Description, Platforms, Detection, Phase) and the keyword\n      </p>\n      <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n        <InputLabel id=\"demo-select-small\">Request Type</InputLabel>\n        <Select\n          labelId=\"demo-select-small\"\n          id=\"demo-select-small\"\n          value={requestType}\n          label=\"Request Type\"\n          onChange={handleSelectChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={\"NAME\"}>Name</MenuItem>\n          <MenuItem value={\"ID\"}>Id</MenuItem>\n          <MenuItem value={\"DESCRIPTION\"}>Description</MenuItem>\n          <MenuItem value={\"X_MITRE_PLATFORMS\"}>Platforms</MenuItem>\n          <MenuItem value={\"X_MITRE_DETECTION\"}>Detection</MenuItem>\n          <MenuItem value={\"PHASE_NAME\"}>Phases</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        id=\"request_value_input\"\n        label=\"Request Value\"\n        value={requestValue}\n        onChange={handleTextChange}\n      />\n      <Button onClick={ConductQuery}>Conduct query</Button>\n      <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"flex-start\"\n      > \n        <div>{CheckAttacks()}</div>\n\n        {attacks.map((val, key) => {\n          return(\n            <Grid Item >\n              <Grid\n              container\n              direction=\"column\"\n              justifyContent=\"space-around\"\n              alignItems=\"flex-start\"\n              >\n              <Item>Index: {key + 1}</Item>\n              <Item>Name: {val['NAME']} </Item>\n              <Item>Id: {val['ID']} </Item>\n              <Item>Description: {val['DESCRIPTION']} </Item>\n              <Item>Platforms: {val['X_MITRE_PLATFORMS']} </Item>\n              <Item>Detection: {val['X_MITRE_DETECTION']} </Item>\n              <Item>Phase: {val['PHASE_NAME']} </Item>\n              </Grid>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </div>\n  )\n}\n\n\nexport default DB;"],"mappings":"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"},"metadata":{},"sourceType":"module"}