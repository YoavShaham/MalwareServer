{"ast":null,"code":"var _jsxFileName = \"/home/yoav/Documents/MalwareServer/web-application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [searchedByColum, setSearchedByColum] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [platforms, setPlatforms] = useState(\"\");\n  const [detection, setDetection] = useState(\"\");\n  const [phases, setPhases] = useState(\"\");\n  const [attacksList, setAttacksList] = useState([]);\n  const columns = [{\n    key: 'ID',\n    name: 'ID'\n  }, {\n    key: 'DESCRIPTION',\n    name: 'DESCRIPTION'\n  }, {\n    key: 'NAME',\n    name: 'NAME'\n  }, {\n    key: 'phase_name',\n    name: 'phase_name'\n  }, {\n    key: 'x_mitre_detection',\n    name: 'x_mitre_detection'\n  }, {\n    key: 'x_mitre_platforms',\n    name: 'x_mitre_platforms'\n  }];\n  {\n    /*getting attacks that match keyword*/\n  }\n\n  const searchByKeyword = () => {\n    console.log(keyword);\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: keyword,\n      colum: searchedByColum\n    }).then(resp => {\n      console.log(resp);\n      setAttacksList(resp.data['rows']);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a keyword to search by\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Input: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setKeyword(event.target.value);\n          setSearchedByColum(\"DESCRIPTION\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attacks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchByKeyword,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), attacksList.map((val, key) => {\n        console.log(key);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attack\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Name: \", val.NAME]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Id: \", val.ID]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Description: \", val.DESCRIPTION]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Platforms: \", val.x_mitre_platforms]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"detection: \", val.x_mitre_detection]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Phases: \", val.phase_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ldr0+QoIYXYM943y22DvLqZMxAU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yoav/Documents/MalwareServer/web-application/src/App.js"],"names":["useState","Axios","App","keyword","setKeyword","searchedByColum","setSearchedByColum","name","setName","id","setId","description","setDescription","platforms","setPlatforms","detection","setDetection","phases","setPhases","attacksList","setAttacksList","columns","key","searchByKeyword","console","log","post","colum","then","resp","data","event","target","value","map","val","NAME","ID","DESCRIPTION","x_mitre_platforms","x_mitre_detection","phase_name"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Axios from 'axios'\n\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [searchedByColum, setSearchedByColum] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [platforms, setPlatforms] = useState(\"\");\n  const [detection, setDetection] = useState(\"\");\n  const [phases, setPhases] = useState(\"\");\n\n  const[attacksList, setAttacksList] = useState([]);\n\n  const columns = [\n    { key: 'ID', name: 'ID' },\n    { key: 'DESCRIPTION', name: 'DESCRIPTION' },\n    { key: 'NAME', name: 'NAME' }, \n    { key: 'phase_name', name: 'phase_name'},\n    { key: 'x_mitre_detection', name: 'x_mitre_detection'},\n    { key: 'x_mitre_platforms', name:'x_mitre_platforms'}];\n  \n    {/*getting attacks that match keyword*/}\n  const searchByKeyword = () =>{\n    console.log(keyword);\n    Axios.post('http://localhost:9001/getAttacks', {\n      keyword: keyword ,\n      colum: searchedByColum\n    }).then((resp) => {\n      console.log(resp);\n      setAttacksList(resp.data['rows']);\n    });\n  }\n\n\n  return (\n    <div className=\"App\" >\n      \n      <h1>Welcome</h1>\n      <p>Enter a keyword to search by</p>\n        <div className=\"input\">\n        <label>Input: </label>\n        {/*getting keyword */}\n        <input type=\"text\" onChange= {(event)=> {\n          setKeyword(event.target.value);\n          setSearchedByColum(\"DESCRIPTION\");\n        }}/>\n        <br></br>\n        \n      </div>\n      <div className=\"attacks\">\n        <button onClick={searchByKeyword}>search</button>\n        {/* showing attacks to the user */}\n\n        {attacksList.map((val, key) => {\n          console.log(key);\n          return (\n              \n            <div className=\"attack\" key={key}>\n              <div>\n                <h3>Name: {val.NAME}</h3>\n                <h3>Id: {val.ID}</h3>\n                <h3>Description: {val.DESCRIPTION}</h3>\n                <h3>Platforms: {val.x_mitre_platforms}</h3>\n                <h3>detection: {val.x_mitre_detection}</h3>\n                <h3>Phases: {val.phase_name}</h3>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}