import './App.css';
import * as React from 'react';
import { experimentalStyled as styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Paper from '@mui/material/Paper';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import TextField from '@mui/material/TextField';
import Button from '@mui/material/Button'
import Grid from '@mui/material/Grid';
import Axios from 'axios'


const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  ...theme.typography.body2,
  padding: theme.spacing(2),
  textAlign: 'left',
  color: theme.palette.text.secondary,
}));

const DB = () => {
  const [requestType, setRequestType] = React.useState(''); 
  const [requestValue, setRequestValue] = React.useState(''); 
  const [attacks, setAttacks] = React.useState([]);

  const handleSelectChange = (event) => {
    setRequestType(event.target.value);
  };
  
  const handleTextChange = (event) => {
    setRequestValue(event.target.value);
  };

  const ConductQuery = () =>{
    getDbAtacksViaKeyword();
  };

  const getDbAtacksViaKeyword = () =>{
    Axios.post('http://localhost:9001/getAttacks', {
      keyword: requestValue ,
      colum: requestType
    }).then((resp) => {
      console.log('1')
      console.log(resp.data);
      console.log(typeof resp.data['rows'])
      setAttacks(resp.data['rows']);
    });
  };

  return(
    <div className='db'>
      <p>
        This is an attack search service
      </p>
      <p>
        You cand search the db by specifing the colum name(Name, Id, Description, Platforms, Detection, Phase) and the keyword
      </p>
      <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
        <InputLabel id="demo-select-small">Request Type</InputLabel>
        <Select
          labelId="demo-select-small"
          id="demo-select-small"
          value={requestType}
          label="Request Type"
          onChange={handleSelectChange}
        >
          <MenuItem value="">
            <em>None</em>
          </MenuItem>
          <MenuItem value={"NAME"}>Name</MenuItem>
          <MenuItem value={"ID"}>Id</MenuItem>
          <MenuItem value={"DESCRIPTION"}>Description</MenuItem>
          <MenuItem value={"X_MITRE_PLATFORMS"}>Platforms</MenuItem>
          <MenuItem value={"X_MITRE_DETECTION"}>Detection</MenuItem>
          <MenuItem value={"PHASE_NAME"}>Phases</MenuItem>
        </Select>
      </FormControl>
      <TextField
        id="request_value_input"
        label="Request Value"
        value={requestValue}
        onChange={handleTextChange}
      />
      <Button onClick={ConductQuery}>Conduct query</Button>
      <Grid
      container
      direction="column"
      justifyContent="space-evenly"
      alignItems="flex-start"
      >
        {attacks.map((val, key) => {
          return(
            <Grid Item >
              <Grid
              container
              direction="column"
              justifyContent="space-around"
              alignItems="flex-start"
              >
              <Item>Index: {key + 1}</Item>
              <Item>Name: {val['NAME']} </Item>
              <Item>Id: {val['ID']} </Item>
              <Item>Description: {val['DESCRIPTION']} </Item>
              <Item>Platforms: {val['X_MITRE_PLATFORMS']} </Item>
              <Item>Detection: {val['X_MITRE_DETECTION']} </Item>
              <Item>Phase: {val['PHASE_NAME']} </Item>
              </Grid>
            </Grid>
          )
        })}
      </Grid>
    </div>
  )
}
/*
<Grid Item >
              <Grid
              container
              direction="column"
              justifyContent="flex-start"
              alignItems="flex-start"
              >
              <Item>Name: {val['NAME']}{"\n"}</Item>
              <Item>Id: {val['ID']}{"\n"}</Item>
              <Item>Description: {val['DESCRIPTION']}{"\n"}</Item>
              <Item>Platforms: {val['PLATFORMS']}{"\n"}</Item>
              <Item>Detection: {val['DETECTION']}{"\n"}</Item>
              <Item>Phase: {val['PHASE']}{"\n"}</Item>
              </Grid>
            </Grid>
*/
/* 
const [keyword, setKeyword] = useState("");
  const [searchedByColum, setSearchedByColum] = useState("");

  const[attacksList, setAttacksList] = useState([]);

    //getting attacks that match keyword
  const searchByKeyword = () =>{
    Axios.post('http://localhost:9001/getAttacks', {
      keyword: keyword ,
      colum: searchedByColum
    }).then((resp) => {
      console.log(resp);
      setAttacksList(resp.data['rows']);
    });
  }


  return (
    <div className="App" >
      
      <h1>Welcome</h1>
      <p>Enter a keyword to search by</p>
        <div className="input">
        <label>Input: </label>
      
        <input type="text" onChange= {(event)=> {
            setKeyword(event.target.value);
            setSearchedByColum("DESCRIPTION");
          }}/>
          <br></br>
          
        </div>
        <div className="attacks">
          <button onClick={searchByKeyword}>search</button>
          
  
          {attacksList.map((val, key) => {
            return (
                
              <div className="attack" key={key}>
                <div>
                  <h3>Name: {val.NAME}</h3>
                  <h3>Id: {val.ID}</h3>
                  <h3>Description: {val.DESCRIPTION}</h3>
                  <h3>Platforms: {val.x_mitre_platforms}</h3>
                  <h3>detection: {val.x_mitre_detection}</h3>
                  <h3>Phases: {val.phase_name}</h3>
                </div>
              </div>
            );
          })}
        </div>
        </div>
    );
*/

export default DB;