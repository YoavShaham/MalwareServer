import './App.css';
import * as React from 'react';
import { experimentalStyled as styled, Experimental_CssVarsProvider } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Paper from '@mui/material/Paper';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import TextField from '@mui/material/TextField';
import Button from '@mui/material/Button'
import Grid from '@mui/material/Grid';
import Axios from 'axios'


const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  ...theme.typography.body2,
  padding: theme.spacing(2),
  textAlign: 'left',
  color: theme.palette.text.secondary,
}));

const DB = () => {
  const [requestType, setRequestType] = React.useState(''); 
  const [requestValue, setRequestValue] = React.useState(''); 
  const [attacks, setAttacks] = React.useState([]);
  const [isAttacks, setIsAttacks] = React.useState(true);

  const handleSelectChange = (event) => {
    setRequestType(event.target.value);
  };
  
  const handleTextChange = (event) => {
    setRequestValue(event.target.value);
  };

  const ConductQuery = () =>{
    getDbAtacksViaKeyword();
  };

  const CheckAttacks = () => {
    if(isAttacks === true){
      return ''
    }
    else{
      return <Item>No result matches query</Item>
    }
  };

  const getDbAtacksViaKeyword = () =>{
    Axios.post('http://localhost:9001/getAttacks', {
      keyword: requestValue ,
      colum: requestType
    }).then((resp) => {
      if(resp.data['rows'] !== undefined){
        setAttacks(resp.data['rows']);
        if(resp.data['rows'].length > 0){
          setIsAttacks(true)
        }
        else{
          setIsAttacks(false)
        }
      }
    });
  };

  return(
    <div className='db'>
      <p>
        This is an attack search service
      </p>
      <p>
        You cand search the db by specifing the colum name(Name, Id, Description, Platforms, Detection, Phase) and the keyword
      </p>
      <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
        <InputLabel id="demo-select-small">Request Type</InputLabel>
        <Select
          labelId="demo-select-small"
          id="demo-select-small"
          value={requestType}
          label="Request Type"
          onChange={handleSelectChange}
        >
          <MenuItem value="">
            <em>None</em>
          </MenuItem>
          <MenuItem value={"NAME"}>Name</MenuItem>
          <MenuItem value={"ID"}>Id</MenuItem>
          <MenuItem value={"DESCRIPTION"}>Description</MenuItem>
          <MenuItem value={"X_MITRE_PLATFORMS"}>Platforms</MenuItem>
          <MenuItem value={"X_MITRE_DETECTION"}>Detection</MenuItem>
          <MenuItem value={"PHASE_NAME"}>Phases</MenuItem>
        </Select>
      </FormControl>
      <TextField
        id="request_value_input"
        label="Request Value"
        value={requestValue}
        onChange={handleTextChange}
      />
      <Button onClick={ConductQuery}>Conduct query</Button>
      <Grid
      container
      direction="column"
      justifyContent="space-evenly"
      alignItems="flex-start"
      > 
        <div>{CheckAttacks()}</div>

        {attacks.map((val, key) => {
          return(
            <Grid Item >
              <Grid
              container
              direction="column"
              justifyContent="space-around"
              alignItems="flex-start"
              >
              <Item>Index: {key + 1}</Item>
              <Item>Name: {val['NAME']} </Item>
              <Item>Id: {val['ID']} </Item>
              <Item>Description: {val['DESCRIPTION']} </Item>
              <Item>Platforms: {val['X_MITRE_PLATFORMS']} </Item>
              <Item>Detection: {val['X_MITRE_DETECTION']} </Item>
              <Item>Phase: {val['PHASE_NAME']} </Item>
              </Grid>
            </Grid>
          )
        })}
      </Grid>
    </div>
  )
}


export default DB;