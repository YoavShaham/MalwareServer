const app = require('../app/app')
require('dotenv').config()
const axios = require('axios')
const { expect } = require("chai");

describe('Virus Total API', () => {  
  const testIp = {
    'result': '8.8.8.8 is a malicious address',
  }

  const testUrl = {
    'result': "https://www.cnn.com/ isn't a malicious url"
  }

  const testDomain ={
    'result': "youtube.com isn't a malicious domain"
  }

  const testSignature ={
    'result': '178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1 is a malicious signature'
  }

  let test_repository = {
    getVirusTotalIpViaBot (ip) {
      return Promise.resolve(testIp)
    },
    getVirusTotalUrlViaBot(url){
      return Promise.resolve(testUrl)
    },
    getVirusTotalDomainViaBot(domain){
      return Promise.resolve(testDomain)
    },
    getVirusTotalSignatureViaBot(domain){
      return Promise.resolve(testSignature)
    }
  }


  // before the tests are running, setting up the server 
  before(async () => {
      const serv = await app.initialize_app({
      port: process.env.VIRUS_TOTAL_SERVICE_PORT,
      repo: test_repository
    });
    })

  after(() => {
    app.dissconect_app()
  })

  it('test ip scan', async () => {
      const res = await axios.post(`http://localhost:${process.env.VIRUS_TOTAL_SERVICE_PORT}/getVirusTotalIpViaBot`,
        {
          'params':{
            'ip': '8.8.8.8'
          }
        }
    ).then(res => res.data)
    expect(res.result).equal(testIp.result);
    })

  it('test url scan', async () => {
    const res = await axios.post(`http://localhost:${process.env.VIRUS_TOTAL_SERVICE_PORT}/getVirusTotalUrlViaBot`,
      {
        'params':{
          'url': 'https://www.cnn.com/'
        }
      }
  ).then(res => res.data)
  expect(res.result).equal(testUrl.result);
  })

  it('test domain scan', async () => {
    const res = await axios.post(`http://localhost:${process.env.VIRUS_TOTAL_SERVICE_PORT}/getVirusTotalDomainViaBot`,
      {
        'params':{
          'domain': 'youtube.com'
        }
      }
  ).then(res => res.data)
  expect(res.result).equal(testDomain.result);
  })

  it('test signature scan', async () => {
    const res = await axios.post(`http://localhost:${process.env.VIRUS_TOTAL_SERVICE_PORT}/getVirusTotalSignatureViaBot`,
      {
        'params':{
          'hash': '178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1'
        }
      }
  ).then(res => res.data)
  expect(res.result).equal(testSignature.result);
  })
})