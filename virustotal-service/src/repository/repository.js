'use strict'
const nvt = require('node-virustotal');

const repository = (api_key) => {
    const getVirusTotalSignatureViaBot = (hash) => {
        return new Promise((resolve, reject) => {
            var results;

            // making signature request
            const request = nvt.makeAPI().setKey(api_key);
            request.fileLookup(hash, function(err, result) {
                
                // if an error occured
                if (err) {
                console.log(err);
                results = {
                    "result": "hash doesn't exist"
                };
                resolve(results)
                } else {
                
                    //if there is more than 1 malicious result than the result is malicious
                if (JSON.parse(result)['data']['attributes']['last_analysis_stats']['malicious'] > 0) {
                    results = {
                        "result": hash + " is a malicious signature"
                    }
                } else {
                    results = {
                        "result": hash + " isn't a malicious hash"
                    }
                }
                }
        resolve(results)
        })
    })
}

const getVirusTotalDomainViaBot = (domain) => {
    return new Promise((resolve, reject) => {
        var results
        // making domain request
        const request = nvt.makeAPI().setKey(api_key);
        request.domainLookup(domain, function(err, result) {

            // if domain doesn't exist
            if (err) {
                console.log(err);
                results = {
                    "result": "domain doesn't exist"
                };
                resolve(results)
            } else {
            
                //if there is more than 1 malicious result than the result is malicious
                if (JSON.parse(result)['data']['attributes']['last_analysis_stats']['malicious'] > 0) {
                    results = {
                        "result": domain + " is a malicious domain"
                    };
                } else {
                    results = {
                        "result": domain + " isn't a malicious domain"
                    }
                }
            }
        resolve(results)
    });
    })
}

app.post('/getVirusTotalUrlViaBot', (url) => {
    return new Promise((resolve, reject) => {
        var results;
        const request = nvt.makeAPI().setKey(api_key);
        request.urlLookup(nvt.sha256(url), function(err, result) {

            if (err) {
                console.log(err);
                results = {
                    "result": "url doesn't exist"
                };
                resolve(results)
            } else {
                //if there is more than 1 malicious result than the result is malicious
                if (JSON.parse(result)['data']['attributes']['last_analysis_stats']['malicious'] > 0) {
                    results = {
                        "result": "malicious"
                    }
                } else {
                    results = {
                        "result": "undetected"
                    }
                }
            }
            resolve(results)

        });
    })

})

}

const virus_total_connect = (api_key) => {
    return new Promise ((resolve, reject) => {
        if(!api_key){
            reject(new Error("virustotal api key not supplied"))
        }

        resolve(repository(api_key))
    })
}

module.exports = Object.assign({}, {virus_total_connect})
